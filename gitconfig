[init]
  templatedir = ~/.git_template
	defaultBranch = main
[user]
  name = Bruno Azevedo
  email = azevedo.252@gmail.com
[alias]
  a = add
  aa = add -A
  b = branch
  bs = branch --sort=-committerdate
  branches = for-each-ref --sort=-committerdate --format=\"%(color:blue)%(authordate:relative)\t%(color:red)%(authorname)\t%(color:white)%(color:bold)%(refname:short)\" refs/remotes
  ca = commit --amend
  ci = commit -v
  fix = commit --fixup
  cleanup = !git remote prune origin && git gc && git clean -dfx && git stash clear
  co = checkout
  conflicts = diff --name-only --diff-filter=U
  d = diff
  dsf = "!f() { [ -z "$GIT_PREFIX" ] || cd "$GIT_PREFIX" && git diff --color "$@" | diff-so-fancy  | less --tabs=4 -RFX; }; f"
  rim = !git co main && git fetch && git rebase && git co - && git rebase -i main
  done = !git rim && git checkout main && git merge @{-1}
  donef = !git rim && git push -f && git checkout main && git merge @{-1}
  dbr = !sh -c 'git push origin :refs/heads/$1 && git branch -D $1' -
  dbrs = !sh -c 'git branch --list '$1*' | xargs -n 1 git nuke' -
  bm = "!git branch --merged | egrep -v \"(^\\*|master|main|dev)\""
  dm = "!git bm | xargs -n 1 git dbr "   # delete all merged branches using "git dbr"
  en = "!git edit-new"
  f = fetch
  l = lg2
  lg = !"git lg1"
  lg1 = log --graph --abbrev-commit --decorate --format=format:'%C(bold blue)%h%C(reset) - %C(bold green)(%ar)%C(reset) %C(white)%s%C(reset) %C(dim white)- %an%C(reset)%C(bold yellow)%d%C(reset)' --all
  lg2 = log --color --graph --date=short --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%ad) %C(blue)[%an]%Creset' --abbrev-commit
  lg3 = log --graph --abbrev-commit --decorate --format=format:'%C(bold blue)%h%C(reset) - %C(bold cyan)%aD%C(reset) %C(bold green)(%ar)%C(reset)%C(bold yellow)%d%C(reset)%n''          %C(white)%s%C(reset) %C(dim white)- %an%C(reset)' --all
  graph = log --graph --all --decorate --stat --date=iso
  m = merge
  mt = mergetool                    # fire up the merge tool
  p = push
  r = rebase
  ra = rebase --abort
  rc = rebase --continue
  ri = rebase -i
  rso = remote show origin
  s = status
  sta = stash
  stp = stash pop
  wip = !git add . && git commit --no-verify -m "wip"
  unstage = reset --soft HEAD^
  undo = reset HEAD~
[color]
  ui = true
[core]
  editor = $EDITOR
  excludesfile = ~/.gitignore
  pager = delta
[delta]
  features = line-numbers decorations
  syntax-theme = Dracula
  plus-style = syntax "#003800"
  minus-style = syntax "#3f0001"
[delta "decorations"]
  commit-decoration-style = bold yellow box ul
  file-style = bold yellow ul
  file-decoration-style = none
  hunk-header-decoration-style = cyan box ul
[delta "line-numbers"]
  line-numbers-left-style = cyan
  line-numbers-right-style = cyan
  line-numbers-minus-style = 124
  line-numbers-plus-style = 28
[interactive]
  diffFilter = delta --color-only
[diff]
  colorMoved = default
[push]
  default = current
[fetch]
  prune = true
[status]
  short = 1
[help]
  autocorrect = 1
[mergetool "vimdiff"]
  cmd = nvim -d $LOCAL $MERGED $REMOTE
[mergetool]
  prompt = false
  keepBackup = false
  trustExitCode = false
[merge]
  tool = vimdiff
[diff]
  tool = vimdiff
[commit]
  template = ~/.gitmessage
[rebase]
  autosquash = true
